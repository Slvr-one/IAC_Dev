apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
      #   fsGroup: 1000 
      #   runAsUser: 1000
        runAsUser: 0
      containers:
        - name: jenkins
          image: 514095112279.dkr.ecr.eu-central-1.amazonaws.com/jenkins_docker:1.7.1 #jenkins/jenkins:lts
          # env:
          # - name: JAVA_OPTS
          #   value: -Djenkins.install.runSetupWizard=false
          # - name: JENKINS_OPTS
          #   valueFrom:
          #     secretKeyRef:
          #       name: jenkins
          #       key: options
          # - name: JAVA_OPTS
          #   value: '-Xmx1400m'
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          # livenessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 90
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 5
          # readinessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home         
            - name: docker-socket
              mountPath: /var/run/docker.sock
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
              claimName: jenkins-home-claim
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            # type: File
        # - name: jenkins-sock
        #   persistentVolumeClaim:
        #       claimName: jenkins-sock-claim

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  # annotations:
  #     prometheus.io/scrape: 'true'
  #     prometheus.io/path:   /
  #     prometheus.io/port:   '8080'
spec:
  selector: 
    app: jenkins
  type: NodePort  
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 32000